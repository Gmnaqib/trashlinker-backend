// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  username   String
  password   String
  address    String
  longitude  Float?
  latitude   Float?
  role       Role        @default(USER)
  posts      post[]
  volunteers volunteer[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now()) @updatedAt
}

model volunteer {
  id        Int             @id @default(autoincrement())
  userId    Int
  user      user            @relation(fields: [userId], references: [id])
  posts     postVolunteer[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @default(now()) @updatedAt
}

enum Role {
  USER
  COMMUNITY
  ADMIN
}

model post {
  id          Int             @id @default(autoincrement())
  title       String?
  description String?
  type        Type            @default(Volunteer)
  image       String
  longitude   Float
  latitude    Float
  fullAddress String?
  volunteers  postVolunteer[]
  schedule    DateTime?
  userId      Int
  tpaId       Int
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @default(now()) @updatedAt
  User        user            @relation(fields: [userId], references: [id])
  tpa         tpa             @relation(fields: [tpaId], references: [id])
}

enum Type {
  Volunteer
  Report
}

model tpa {
  id              Int    @id @default(autoincrement())
  tpa_name        String
  tpa_location    String
  tpa_image       String
  tpa_description String
  Posts           post[]
}

model postVolunteer {
  id          Int       @id @default(autoincrement())
  volunteerId Int
  postId      Int
  checkin     Boolean   @default(false)
  volunteer   volunteer @relation(fields: [volunteerId], references: [id])
  post        post      @relation(fields: [postId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model logVolunteer {
  id          Int      @id @default(autoincrement())
  volunteerId Int
  postId      Int
  action      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}
